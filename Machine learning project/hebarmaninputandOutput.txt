> library(data.table)
> haberman<-fread('https://archive.ics.uci.edu/ml/machine-learning-databases/haberman/haberman.data')
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  3103  100  3103    0     0   3103      0  0:00:01 --:--:--  0:00:01  3676
> names(haberman)<-c("Age", "Year", "Axillary", "Survived")
> str(haberman)
Classes ‘data.table’ and 'data.frame':	306 obs. of  4 variables:
 $ Age     : int  30 30 30 31 31 33 33 34 34 34 ...
 $ Year    : int  64 62 65 59 65 58 60 59 66 58 ...
 $ Axillary: int  1 3 0 2 4 10 0 0 9 30 ...
 $ Survived: int  1 1 1 1 1 1 1 2 2 1 ...
 - attr(*, ".internal.selfref")=<externalptr> 
> haberman$Survived[haberman$Survived==2]<-0
> trainsubset1haberman<-haberman[1:71, ]
> summary(trainsubset1haberman)
      Age             Year          Axillary     
 Min.   :30.00   Min.   :58.00   Min.   : 0.000  
 1st Qu.:36.50   1st Qu.:59.00   1st Qu.: 0.000  
 Median :39.00   Median :62.00   Median : 1.000  
 Mean   :38.44   Mean   :62.23   Mean   : 4.324  
 3rd Qu.:41.50   3rd Qu.:64.50   3rd Qu.: 4.000  
 Max.   :43.00   Max.   :69.00   Max.   :52.000  
    Survived     
 Min.   :0.0000  
 1st Qu.:1.0000  
 Median :1.0000  
 Mean   :0.8169  
 3rd Qu.:1.0000  
 Max.   :1.0000  
> trainsubset2haberman<-haberman[103:174,]
> trainsubset3haberman<-haberman[205:276,]
> trainsubset1haberman<-haberman[1:71, ]
> testsubset1haberman<-haberman[72:102, ]
> testsubset2haberman<-haberman[175:204, ]
> testsubset3haberman<-haberman[277:306, ]
> model1haberman<-glm(Survived~., family=binomial(link = 'logit'), data=trainsubset1haberman)
> summary(model1haberman)

Call:
glm(formula = Survived ~ ., family = binomial(link = "logit"), 
    data = trainsubset1haberman)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.7085   0.2459   0.4261   0.6317   1.2384  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)  
(Intercept) 21.36913    8.42474   2.536   0.0112 *
Age         -0.22244    0.11647  -1.910   0.0562 .
Year        -0.17227    0.10371  -1.661   0.0967 .
Axillary    -0.06307    0.03650  -1.728   0.0840 .
---
Signif. codes:  
0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 67.60  on 70  degrees of freedom
Residual deviance: 57.27  on 67  degrees of freedom
AIC: 65.27

Number of Fisher Scoring iterations: 5

> model2haberman<-glm(Survived~., family=binomial(link = 'logit'), data=trainsubset2haberman)
> model3haberman<-glm(Survived~., family=binomial(link = 'logit'), data=trainsubset3haberman)
> fitted.results1haberman<-predict(model1haberman, newdata = subset(testsubset1haberman, select=c(1,2,3)), type="response")
> fitted.results2haberman<-predict(model2haberman, newdata = subset(testsubset2haberman, select=c(1,2,3)), type="response")
> fitted.results3haberman<-predict(model3haberman, newdata = subset(testsubset3haberman, select=c(1,2,3)), type="response")
> fitted.results1haberman<-ifelse(fitted.results1haberman>0.5,1,0)
> fitted.results2haberman<-ifelse(fitted.results2haberman>0.5,1,0)
> fitted.results3haberman<-ifelse(fitted.results3haberman>0.5,1,0)
> misClasificError1haberman<-mean(fitted.results1haberman!=testsubset1haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1haberman))
[1] "Accuracy 0.645161290322581"
> misClasificError2haberman<-mean(fitted.results2haberman!=testsubset2haberman$Survived)
> print(paste('Accuracy', 1-misClasificError2haberman))
[1] "Accuracy 0.666666666666667"
> misClasificError3haberman<-mean(fitted.results3haberman!=testsubset3haberman$Survived)
> print(paste('Accuracy', 1-misClasificError3haberman))
[1] "Accuracy 0.533333333333333"
> fitted.results1habermanwholedata<-predict(model1haberman, newdata = subset(haberman, select=c(1,2,3)), type="response")
> fitted.results1habermanwholedata<-ifelse(fitted.results1habermanwholedata>0.5,1,0)
> misClasificError1Wholedata<-mean(fitted.results1habermanwholedata!=haberman$Survived)
> print(paste('Accuracy',1-misClasificError1Wholedata))
[1] "Accuracy 0.447712418300654"
> fitted.results2habermanwholedata<-predict(model2haberman, newdata = subset(haberman, select=c(1,2,3)), type="response")
> fitted.results2habermanwholedata<-ifelse(fitted.results2habermanwholedata>0.5,1,0)
> misClasificError2Wholedata<-mean(fitted.results2habermanwholedata!=haberman$Survived)
> print(paste('Accuracy',1-misClasificError2Wholedata))
[1] "Accuracy 0.591503267973856"
> fitted.results3habermanwholedata<-predict(model3haberman, newdata = subset(haberman, select=c(1,2,3)), type="response")
> fitted.results3habermanwholedata<-ifelse(fitted.results3habermanwholedata>0.5,1,0)
> misClasificError3Wholedata<-mean(fitted.results3habermanwholedata!=haberman$Survived)
> print(paste('Accuracy',1-misClasificError3Wholedata))
[1] "Accuracy 0.715686274509804"
> fitted.results1habermanwholedata1to2<-predict(model1haberman, newdata = subset(testsubset2haberman, select=c(1,2,3)), type="response")
> fitted.results1habermanwholedata1to3<-predict(model1haberman, newdata = subset(testsubset3haberman, select=c(1,2,3)), type="response")
> fitted.results1habermanwholedata1to2<-ifelse(fitted.results1habermanwholedata1to2>0.5,1,0)
> misClasificError1haberman1to2<-mean(fitted.results1habermanwholedata1to2!=testsubset2haberman$Survived)
> print(paste('Accuracy', misClasificError1haberman1to2))
[1] "Accuracy 0.766666666666667"
> fitted.results1habermanwholedata1to3<-ifelse(fitted.results1habermanwholedata1to3>0.5,1,0)
> fitted.results1habermanwholedata1to3<-ifelse(fitted.results1habermanwholedata1to3>0.5,1,0)
> misClasificError1haberman1to3<-mean(fitted.results1habermanwholedata1to3!=testsubset3haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1haberman1to3))
[1] "Accuracy 0.233333333333333"
> misClasificError1haberman1to3
[1] 0.7666667
> fitted.results1habermanwholedata2to1<-predict(model2haberman, newdata = subset(testsubset1haberman, select=c(1,2,3)), type="response")
> fitted.results1habermanwholedata2to1<-ifelse(fitted.results1habermanwholedata2to1>0.5,1,0)
> misClasificError1haberman2to1<-mean(fitted.results1habermanwholedata2to1!=testsubset1haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1haberman2to1))
[1] "Accuracy 0.612903225806452"
> fitted.results1habermanwholedata2to3<-predict(model2haberman, newdata = subset(testsubset3haberman, select=c(1,2,3)), type="response")
> fitted.results1habermanwholedata2to3<-ifelse(fitted.results1habermanwholedata2to3>0.5,1,0)
> misClasificError1haberman2to3<-mean(fitted.results1habermanwholedata2to3!=testsubset3haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1haberman2to3))
[1] "Accuracy 0.233333333333333"
> fitted.results1habermanwholedata3to1<-predict(model3haberman, newdata = subset(testsubset1haberman, select=c(1,2,3)), type="response")
> fitted.results1habermanwholedata3to1<-ifelse(fitted.results1habermanwholedata3to1>0.5,1,0)
> misClasificError1haberman2to3<-mean(fitted.results1habermanwholedata3to1!=testsubset1haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1haberman3to1))
[1] "Accuracy 0.580645161290323"
> misClasificError1haberman3to1<-mean(fitted.results1habermanwholedata3to1!=testsubset1haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1haberman3to1))
[1] "Accuracy 0.580645161290323"
> fitted.results1habermanwholedata3to2<-predict(model3haberman, newdata = subset(testsubset2haberman, select=c(1,2,3)), type="response")
> fitted.results1habermanwholedata3to2<-ifelse(fitted.results1habermanwholedata3to2>0.5,1,0)
> misClasificError1haberman3to2<-mean(fitted.results1habermanwholedata3to2!=testsubset2haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1haberman3to2))
[1] "Accuracy 0.733333333333333"
> fitted.results1habermanwholedata2to3<-ifelse(fitted.results1habermanwholedata2to1>0.5,1,0)
> misClasificError1Wholedata<-mean(fitted.results1habermanwholedata!=haberman$Survived)
> print(paste('Accuracy', 1-misClasificError1Wholedata)) 
[1] "Accuracy 0.447712418300654"
  